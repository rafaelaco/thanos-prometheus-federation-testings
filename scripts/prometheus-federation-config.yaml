# General settings
replicaDaemonSet: true
externalLabels:
  region: eastus2
  cluster: local

# Readiness and Liveness configuration
readinessProbeInitialDelaySeconds: 15
readinessProbePeriodSeconds: 5
readinessProbeTimeoutSeconds: 4
readinessProbeFailureThreshold: 3
readinessProbeSuccessThreshold: 1
livenessProbeInitialDelaySeconds: 30
livenessProbePeriodSeconds: 15
livenessProbeTimeoutSeconds: 10
livenessProbeFailureThreshold: 3
livenessProbeSuccessThreshold: 1

# Thanos
thanos:
  enabled: true
  image:
    repository: quay.io/thanos
    tag: v0.30.2
    pullPolicy: IfNotPresent
    pullSecrets: []
  federation:
    scrapeInterval: 1m
    scrapeTimeout: 15s
  queryFrontend:
    enabled: true
    replicas: 1
  query:
    replicas: 1
  store:
    enabled: true
  compactor:
    enabled: true
    schedule: "0 02 * * *"

# Image repository and version
image:
  repository: prom
  tag: v2.40.7
  pullPolicy: IfNotPresent
  pullSecrets: []

### Instances configuration - Dynamic instances option (replicaDaemonSet=true)
# You have to configure only one with the type=primary
# and only one of type=replica (that will be DaemonSet)
prometheusInstances:
  - type: primary
    storageTsdbRetentionTime: "5d"
    scrapeTimeout: 10s
    scrapeInterval: 15s
    environmentVariables:
      - name: GOGC
        value: 40

  - type: replica
    storageTsdbRetentionTime: "1d"
    scrapeInterval: 15s
    rulesFile: "files/rules-istio-coredns.yaml"
    jobs:
      - namespacesToScrape: [kube-system]
        labelsToScrape: ["k8s-app=kube-dns"]
      - namespacesToScrape: [default, microservices]

### Duplicated Prometheus DaemonSet
# You can duplicate the replica configuration to add HA to your Prometheus DaemonSet
# Thanos will handle the duplicated data, but we will make sure we have two HA to our prometheus setup
  - type: replica
    storageTsdbRetentionTime: "1d"
    scrapeInterval: 15s
    rulesFile: "files/rules-istio-coredns.yaml"
    jobs:
      - namespacesToScrape: [kube-system]
        labelsToScrape: ["k8s-app=kube-dns"]
      - namespacesToScrape: [default, microservices]

### Instances configuration - Fixed instances option (replicaDaemonSet=false) - DEPRECATED
# You have to configure only one with the type=primary
# And you can configure as many as you want of the type=replica
# The "shards" value inside the "jobs" will split the discovery endpoint between instances
# prometheusInstances:
#   - type: primary
#     storageTsdbRetentionTime: "5d"
#     environmentVariables:
#       - name: GOGC
#         value: 40

#   - type: replica
#     storageTsdbRetentionTime: "1d"
#     jobs:
#       - namespacesToScrape: [kube-system]
#         labelsToScrape: ["k8s-app=kube-dns"]

#   - type: replica
#     shards: 5
#     storageTsdbRetentionTime: "1d"
#     jobs:
#       - namespacesToScrape: [microservices]

# Azure Persistent Volume settings
azurePersistentVolumeResourceGroup: ""
azurePersistentVolumeStorageAccount: ""
azurePersistentVolumeShareName: ""

# Development settings
developmentMode: true
developmentHostPath: "/tmp/data"